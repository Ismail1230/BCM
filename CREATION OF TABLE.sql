UPDATE XXBCM_ORDER_MGT 
SET ORDER_TOTAL_AMOUNT = REPLACE(ORDER_TOTAL_AMOUNT, ',', '');

UPDATE XXBCM_ORDER_MGT
SET ORDER_LINE_AMOUNT = REPLACE(ORDER_LINE_AMOUNT, 'o', '0')
WHERE ORDER_LINE_AMOUNT LIKE '%o%';

UPDATE XXBCM_ORDER_MGT
SET ORDER_LINE_AMOUNT = REPLACE(ORDER_LINE_AMOUNT, 'O', '0')
WHERE ORDER_LINE_AMOUNT LIKE '%O%';

UPDATE XXBCM_ORDER_MGT
SET ORDER_LINE_AMOUNT = REPLACE(ORDER_LINE_AMOUNT, 'I', '1')
WHERE ORDER_LINE_AMOUNT LIKE '%I%';

UPDATE XXBCM_ORDER_MGT
SET ORDER_LINE_AMOUNT = REPLACE(ORDER_LINE_AMOUNT, 'S', '5')
WHERE ORDER_LINE_AMOUNT LIKE '%S%';

UPDATE XXBCM_ORDER_MGT
SET ORDER_LINE_AMOUNT = REPLACE(ORDER_LINE_AMOUNT, 's', '5')
WHERE ORDER_LINE_AMOUNT LIKE '%s%';

UPDATE XXBCM_ORDER_MGT 
SET ORDER_LINE_AMOUNT = REPLACE(ORDER_LINE_AMOUNT, ',', '');

UPDATE XXBCM_ORDER_MGT
SET INVOICE_AMOUNT = REPLACE(INVOICE_AMOUNT, 'o', '0')
WHERE INVOICE_AMOUNT LIKE '%o%';

UPDATE XXBCM_ORDER_MGT
SET INVOICE_AMOUNT = REPLACE(INVOICE_AMOUNT, 'O', '0')
WHERE INVOICE_AMOUNT LIKE '%O%';

UPDATE XXBCM_ORDER_MGT
SET INVOICE_AMOUNT = REPLACE(INVOICE_AMOUNT, 'I', '1')
WHERE INVOICE_AMOUNT LIKE '%I%';

UPDATE XXBCM_ORDER_MGT
SET INVOICE_AMOUNT = REPLACE(INVOICE_AMOUNT, 'S', '5')
WHERE INVOICE_AMOUNT LIKE '%S%';

UPDATE XXBCM_ORDER_MGT
SET INVOICE_AMOUNT = REPLACE(INVOICE_AMOUNT, 's', '5')
WHERE INVOICE_AMOUNT LIKE '%s%';

UPDATE XXBCM_ORDER_MGT 
SET INVOICE_AMOUNT = REPLACE(INVOICE_AMOUNT, ',', '');

UPDATE XXBCM_ORDER_MGT 
SET SUPP_CONTACT_NUMBER = REPLACE(SUPP_CONTACT_NUMBER, ' ', '');

UPDATE XXBCM_ORDER_MGT 
SET SUPP_CONTACT_NUMBER = REPLACE(SUPP_CONTACT_NUMBER, '.', '');

UPDATE XXBCM_ORDER_MGT
SET SUPP_CONTACT_NUMBER = REPLACE(SUPP_CONTACT_NUMBER, 'o', '0')
WHERE SUPP_CONTACT_NUMBER LIKE '%o%';

UPDATE XXBCM_ORDER_MGT
SET SUPP_CONTACT_NUMBER = REPLACE(SUPP_CONTACT_NUMBER, 'I', '1')
WHERE SUPP_CONTACT_NUMBER LIKE '%I%';

UPDATE XXBCM_ORDER_MGT
SET SUPP_CONTACT_NUMBER = REPLACE(SUPP_CONTACT_NUMBER, 'S', '5')
WHERE SUPP_CONTACT_NUMBER LIKE '%S%'


-----------------------------CREATION OF TABLES---------------------------------------------------------

CREATE TABLE SUPPLIER (
    SUPPLIER_ID         NUMBER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    SUPPLIER_NAME       VARCHAR2(500),
    SUPP_CONTACT_NAME   VARCHAR2(500),
    SUPP_ADDRESS        VARCHAR2(1000),
    SUPP_CONTACT_NUMBER VARCHAR2(50),
    SUPP_EMAIL          VARCHAR2(500)
  
);

CREATE TABLE ORDER_MAIN (
    ORDER_REF VARCHAR2(5) PRIMARY KEY, 
    ORDER_DATE VARCHAR2(50) NOT NULL,  
    ORDER_TOTAL_AMOUNT FLOAT NOT NULL,  
    ORDER_STATUS VARCHAR2(50) NOT NULL,  
    ORDER_DESCRIPTION VARCHAR2(255),    
    SUPPLIER_ID NUMBER,   
    CONSTRAINT FK_SUPPLIER_1 FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER (SUPPLIER_ID),  
    CONSTRAINT CHK_ORDER_REF_LENGTH_2 CHECK (LENGTH(ORDER_REF) = 5)
);

CREATE TABLE ORDER_LINE (
    ORDER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  
    ORDER_REF VARCHAR2(50) NOT NULL,  
    ORDER_DATE VARCHAR2(50) NOT NULL,  
    ORDER_LINE_AMOUNT FLOAT NOT NULL, 
    ORDER_STATUS VARCHAR2(75) NOT NULL, 
    ORDER_DESCRIPTION VARCHAR2(500),
    ORDER_PARENT_REF VARCHAR(5),
    CONSTRAINT FK_ORDER_LINE FOREIGN KEY (ORDER_PARENT_REF) REFERENCES ORDER_MAIN (ORDER_REF)
);

-----------------------------

CREATE TABLE INVOICES_NUMBER (
    INVOICE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,  
    INVOICE_DATE VARCHAR2(50) ,  
    INVOICE_REF VARCHAR2(50) ,
    INVOICE_STATUS VARCHAR2(50) ,  
    INVOICE_DESCRIPTION VARCHAR2(255),  
    INVOICE_HOLD_REASON VARCHAR2(255),
    INVOICE_AMOUNT DECIMAL,
    ORDER_ID NUMBER,
    ORDER_PARENT_REF VARCHAR(10),
    CONSTRAINT FK_ORDER_INVOICE FOREIGN KEY (ORDER_ID) REFERENCES ORDER_LINE (ORDER_ID),
    CONSTRAINT FK_ORDER_PARENT_REF FOREIGN KEY (ORDER_PARENT_REF) REFERENCES ORDER_MAIN (ORDER_REF)
);

-----------------------------

--NOW INSERTING OF DATA

INSERT INTO SUPPLIER (SUPPLIER_NAME, SUPP_CONTACT_NAME, SUPP_ADDRESS, SUPP_CONTACT_NUMBER, SUPP_EMAIL)
    SELECT 
        DISTINCT SUPPLIER_NAME, 
        MAX(SUPP_CONTACT_NAME) AS SUPP_CONTACT_NAME,
        MAX(SUPP_ADDRESS) AS SUPP_ADDRESS,
        MAX(SUPP_CONTACT_NUMBER) AS SUPP_CONTACT_NUMBER,
        MAX(SUPP_EMAIL) AS SUPP_EMAIL
    FROM XXBCM_ORDER_MGT
    GROUP BY SUPPLIER_NAME;
    
-----------------------------

INSERT INTO ORDER_MAIN (ORDER_REF,ORDER_DATE,ORDER_TOTAL_AMOUNT,ORDER_STATUS,ORDER_DESCRIPTION, SUPPLIER_ID)
SELECT DISTINCT 
    SUBSTR(ORDER_REF, 1, 5) AS ORDER_REF,
    ORDER_DATE,
    ORDER_TOTAL_AMOUNT,
    ORDER_STATUS,
    ORDER_DESCRIPTION,
    (SELECT MAX(SUPPLIER_ID) FROM SUPPLIER WHERE SUPPLIER_NAME = XXBCM_ORDER_MGT.SUPPLIER_NAME)
FROM XXBCM_ORDER_MGT
WHERE ORDER_TOTAL_AMOUNT IS NOT NULL
AND ORDER_STATUS NOT IN ('Received', 'Cancelled');

---------------------------------------

INSERT INTO ORDER_LINE (ORDER_REF,ORDER_DATE,ORDER_LINE_AMOUNT,ORDER_STATUS,ORDER_DESCRIPTION,ORDER_PARENT_REF)
SELECT ORDER_REF,ORDER_DATE,ORDER_LINE_AMOUNT,ORDER_STATUS,ORDER_DESCRIPTION, SUBSTR(ORDER_REF, 1, 5) AS ORDER_PARENT_REF
FROM XXBCM_ORDER_MGT
WHERE ORDER_REF LIKE '%-%';

---------------------------------------

INSERT INTO INVOICES_NUMBER (INVOICE_DATE,INVOICE_REF,INVOICE_STATUS,INVOICE_DESCRIPTION,INVOICE_HOLD_REASON,INVOICE_AMOUNT,ORDER_ID,ORDER_PARENT_REF)
SELECT 
    INVOICE_DATE,
    INVOICE_REFERENCE,
    INVOICE_STATUS,
    INVOICE_DESCRIPTION,
    INVOICE_HOLD_REASON,
    INVOICE_AMOUNT,
    (SELECT DISTINCT ORDER_ID 
     FROM ORDER_LINE 
     WHERE ORDER_REF = X.ORDER_REF 
     AND ROWNUM = 1),
     SUBSTR(ORDER_REF, 1, 5) AS ORDER_PARENT_REF
FROM XXBCM_ORDER_MGT X
WHERE X.ORDER_REF LIKE '%-%';





